// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/quiz.proto

package cli

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_55168dc02328f3b6, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Response struct {
	UserId               int64       `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Questions            []*Question `protobuf:"bytes,2,rep,name=Questions,proto3" json:"Questions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_55168dc02328f3b6, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Response) GetQuestions() []*Question {
	if m != nil {
		return m.Questions
	}
	return nil
}

type Answer struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	QuestionId           int64    `protobuf:"varint,2,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
	Body                 string   `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Answer) Reset()         { *m = Answer{} }
func (m *Answer) String() string { return proto.CompactTextString(m) }
func (*Answer) ProtoMessage()    {}
func (*Answer) Descriptor() ([]byte, []int) {
	return fileDescriptor_55168dc02328f3b6, []int{2}
}

func (m *Answer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Answer.Unmarshal(m, b)
}
func (m *Answer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Answer.Marshal(b, m, deterministic)
}
func (m *Answer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Answer.Merge(m, src)
}
func (m *Answer) XXX_Size() int {
	return xxx_messageInfo_Answer.Size(m)
}
func (m *Answer) XXX_DiscardUnknown() {
	xxx_messageInfo_Answer.DiscardUnknown(m)
}

var xxx_messageInfo_Answer proto.InternalMessageInfo

func (m *Answer) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Answer) GetQuestionId() int64 {
	if m != nil {
		return m.QuestionId
	}
	return 0
}

func (m *Answer) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type Question struct {
	Id                   int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Body                 string    `protobuf:"bytes,2,opt,name=Body,proto3" json:"Body,omitempty"`
	Answers              []*Answer `protobuf:"bytes,4,rep,name=Answers,proto3" json:"Answers,omitempty"`
	CorrectAnswerId      int64     `protobuf:"varint,5,opt,name=CorrectAnswerId,proto3" json:"CorrectAnswerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Question) Reset()         { *m = Question{} }
func (m *Question) String() string { return proto.CompactTextString(m) }
func (*Question) ProtoMessage()    {}
func (*Question) Descriptor() ([]byte, []int) {
	return fileDescriptor_55168dc02328f3b6, []int{3}
}

func (m *Question) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Question.Unmarshal(m, b)
}
func (m *Question) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Question.Marshal(b, m, deterministic)
}
func (m *Question) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Question.Merge(m, src)
}
func (m *Question) XXX_Size() int {
	return xxx_messageInfo_Question.Size(m)
}
func (m *Question) XXX_DiscardUnknown() {
	xxx_messageInfo_Question.DiscardUnknown(m)
}

var xxx_messageInfo_Question proto.InternalMessageInfo

func (m *Question) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Question) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Question) GetAnswers() []*Answer {
	if m != nil {
		return m.Answers
	}
	return nil
}

func (m *Question) GetCorrectAnswerId() int64 {
	if m != nil {
		return m.CorrectAnswerId
	}
	return 0
}

type Result struct {
	CorrectAnswers       int64    `protobuf:"varint,1,opt,name=CorrectAnswers,proto3" json:"CorrectAnswers,omitempty"`
	SuccessRate          int64    `protobuf:"varint,2,opt,name=SuccessRate,proto3" json:"SuccessRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_55168dc02328f3b6, []int{4}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetCorrectAnswers() int64 {
	if m != nil {
		return m.CorrectAnswers
	}
	return 0
}

func (m *Result) GetSuccessRate() int64 {
	if m != nil {
		return m.SuccessRate
	}
	return 0
}

type Solution struct {
	QuestionId           int64    `protobuf:"varint,1,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
	AnswerId             int64    `protobuf:"varint,2,opt,name=AnswerId,proto3" json:"AnswerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Solution) Reset()         { *m = Solution{} }
func (m *Solution) String() string { return proto.CompactTextString(m) }
func (*Solution) ProtoMessage()    {}
func (*Solution) Descriptor() ([]byte, []int) {
	return fileDescriptor_55168dc02328f3b6, []int{5}
}

func (m *Solution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Solution.Unmarshal(m, b)
}
func (m *Solution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Solution.Marshal(b, m, deterministic)
}
func (m *Solution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Solution.Merge(m, src)
}
func (m *Solution) XXX_Size() int {
	return xxx_messageInfo_Solution.Size(m)
}
func (m *Solution) XXX_DiscardUnknown() {
	xxx_messageInfo_Solution.DiscardUnknown(m)
}

var xxx_messageInfo_Solution proto.InternalMessageInfo

func (m *Solution) GetQuestionId() int64 {
	if m != nil {
		return m.QuestionId
	}
	return 0
}

func (m *Solution) GetAnswerId() int64 {
	if m != nil {
		return m.AnswerId
	}
	return 0
}

type PostAnswers struct {
	UserId               int64       `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Solution             []*Solution `protobuf:"bytes,2,rep,name=solution,proto3" json:"solution,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PostAnswers) Reset()         { *m = PostAnswers{} }
func (m *PostAnswers) String() string { return proto.CompactTextString(m) }
func (*PostAnswers) ProtoMessage()    {}
func (*PostAnswers) Descriptor() ([]byte, []int) {
	return fileDescriptor_55168dc02328f3b6, []int{6}
}

func (m *PostAnswers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostAnswers.Unmarshal(m, b)
}
func (m *PostAnswers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostAnswers.Marshal(b, m, deterministic)
}
func (m *PostAnswers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostAnswers.Merge(m, src)
}
func (m *PostAnswers) XXX_Size() int {
	return xxx_messageInfo_PostAnswers.Size(m)
}
func (m *PostAnswers) XXX_DiscardUnknown() {
	xxx_messageInfo_PostAnswers.DiscardUnknown(m)
}

var xxx_messageInfo_PostAnswers proto.InternalMessageInfo

func (m *PostAnswers) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PostAnswers) GetSolution() []*Solution {
	if m != nil {
		return m.Solution
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "cli.User")
	proto.RegisterType((*Response)(nil), "cli.Response")
	proto.RegisterType((*Answer)(nil), "cli.Answer")
	proto.RegisterType((*Question)(nil), "cli.Question")
	proto.RegisterType((*Result)(nil), "cli.Result")
	proto.RegisterType((*Solution)(nil), "cli.Solution")
	proto.RegisterType((*PostAnswers)(nil), "cli.PostAnswers")
}

func init() { proto.RegisterFile("proto/quiz.proto", fileDescriptor_55168dc02328f3b6) }

var fileDescriptor_55168dc02328f3b6 = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xdd, 0x4a, 0xeb, 0x40,
	0x10, 0xc7, 0x9b, 0x8f, 0x93, 0x93, 0x4e, 0xce, 0xa9, 0x65, 0x2f, 0x4a, 0xe8, 0x85, 0x84, 0x05,
	0x25, 0x56, 0x88, 0x50, 0x9f, 0x40, 0x05, 0xa5, 0x20, 0xd8, 0x6e, 0xe9, 0x03, 0xb4, 0xc9, 0x5e,
	0x04, 0x62, 0xb6, 0x66, 0xb2, 0x88, 0xbd, 0xf1, 0xd5, 0xa5, 0xbb, 0xd9, 0xb4, 0xa9, 0xbd, 0x9b,
	0xf9, 0xcf, 0xd7, 0x6f, 0x76, 0x16, 0x86, 0xdb, 0x4a, 0xd4, 0xe2, 0xee, 0x43, 0xe6, 0xbb, 0x44,
	0x99, 0xc4, 0x49, 0x8b, 0x9c, 0x4e, 0xc0, 0x5d, 0x21, 0xaf, 0xc8, 0x00, 0xec, 0x3c, 0x0b, 0xad,
	0xc8, 0x8a, 0x1d, 0x66, 0xe7, 0x19, 0x21, 0xe0, 0x96, 0xeb, 0x77, 0x1e, 0xda, 0x91, 0x15, 0xf7,
	0x99, 0xb2, 0xe9, 0x1b, 0xf8, 0x8c, 0xe3, 0x56, 0x94, 0xc8, 0xc9, 0x08, 0x3c, 0x89, 0xbc, 0x9a,
	0x99, 0x9a, 0xc6, 0x23, 0xb7, 0xd0, 0x5f, 0x48, 0x8e, 0x75, 0x2e, 0x4a, 0x0c, 0xed, 0xc8, 0x89,
	0x83, 0xe9, 0xff, 0x24, 0x2d, 0xf2, 0xc4, 0xa8, 0xec, 0x10, 0xa7, 0xaf, 0xe0, 0x3d, 0x94, 0xf8,
	0x79, 0x66, 0xfc, 0x25, 0x80, 0x49, 0x9b, 0x65, 0x0a, 0xc2, 0x61, 0x47, 0xca, 0x1e, 0xef, 0x51,
	0x64, 0x5f, 0xa1, 0xa3, 0xf1, 0xf6, 0x36, 0xfd, 0x06, 0xdf, 0x64, 0x9c, 0x5b, 0x47, 0xe5, 0xdb,
	0x87, 0x7c, 0x72, 0x05, 0x7f, 0xf5, 0x74, 0x0c, 0x5d, 0x05, 0x1a, 0x28, 0x50, 0xad, 0x31, 0x13,
	0x23, 0x31, 0x5c, 0x3c, 0x89, 0xaa, 0xe2, 0x69, 0xad, 0x95, 0x59, 0x16, 0xfe, 0x51, 0x7d, 0x4f,
	0x65, 0xca, 0xc0, 0x63, 0x1c, 0x65, 0x51, 0x93, 0x6b, 0x18, 0x74, 0x82, 0xd8, 0xa0, 0x9c, 0xa8,
	0x24, 0x82, 0x60, 0x29, 0xd3, 0x94, 0x23, 0xb2, 0x75, 0xcd, 0x9b, 0x3d, 0x8f, 0x25, 0xfa, 0x0c,
	0xfe, 0x52, 0x14, 0x52, 0x2d, 0xd5, 0x7d, 0x14, 0xeb, 0xd7, 0xa3, 0x8c, 0xc1, 0x6f, 0x11, 0x75,
	0xab, 0xd6, 0xa7, 0x73, 0x08, 0xe6, 0x02, 0xdb, 0xc1, 0x23, 0xf0, 0x56, 0x9d, 0xf3, 0x69, 0x8f,
	0xdc, 0x80, 0x8f, 0xcd, 0xb8, 0xce, 0xf5, 0x0c, 0x03, 0x6b, 0xc3, 0xd3, 0x0d, 0xb8, 0x0b, 0x99,
	0xef, 0xc8, 0x04, 0xfe, 0xbd, 0xf0, 0xba, 0x3d, 0x2a, 0xe9, 0xab, 0x82, 0x7d, 0xbf, 0xb1, 0xae,
	0x35, 0x7f, 0x86, 0xf6, 0x48, 0x02, 0xc1, 0x92, 0x97, 0x99, 0xa1, 0x18, 0xaa, 0xf8, 0x11, 0xd7,
	0x38, 0x30, 0x15, 0xb2, 0xa8, 0x69, 0x6f, 0xe3, 0xa9, 0x9f, 0x7a, 0xff, 0x13, 0x00, 0x00, 0xff,
	0xff, 0x11, 0xd1, 0x4a, 0xe6, 0xbd, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QuizClient is the client API for Quiz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuizClient interface {
	GetQuestions(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error)
	SendAnswers(ctx context.Context, in *PostAnswers, opts ...grpc.CallOption) (*Result, error)
}

type quizClient struct {
	cc *grpc.ClientConn
}

func NewQuizClient(cc *grpc.ClientConn) QuizClient {
	return &quizClient{cc}
}

func (c *quizClient) GetQuestions(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/cli.Quiz/GetQuestions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quizClient) SendAnswers(ctx context.Context, in *PostAnswers, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/cli.Quiz/SendAnswers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuizServer is the server API for Quiz service.
type QuizServer interface {
	GetQuestions(context.Context, *User) (*Response, error)
	SendAnswers(context.Context, *PostAnswers) (*Result, error)
}

// UnimplementedQuizServer can be embedded to have forward compatible implementations.
type UnimplementedQuizServer struct {
}

func (*UnimplementedQuizServer) GetQuestions(ctx context.Context, req *User) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQuestions not implemented")
}
func (*UnimplementedQuizServer) SendAnswers(ctx context.Context, req *PostAnswers) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendAnswers not implemented")
}

func RegisterQuizServer(s *grpc.Server, srv QuizServer) {
	s.RegisterService(&_Quiz_serviceDesc, srv)
}

func _Quiz_GetQuestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuizServer).GetQuestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cli.Quiz/GetQuestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuizServer).GetQuestions(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Quiz_SendAnswers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostAnswers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuizServer).SendAnswers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cli.Quiz/SendAnswers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuizServer).SendAnswers(ctx, req.(*PostAnswers))
	}
	return interceptor(ctx, in, info, handler)
}

var _Quiz_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cli.Quiz",
	HandlerType: (*QuizServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetQuestions",
			Handler:    _Quiz_GetQuestions_Handler,
		},
		{
			MethodName: "SendAnswers",
			Handler:    _Quiz_SendAnswers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/quiz.proto",
}
